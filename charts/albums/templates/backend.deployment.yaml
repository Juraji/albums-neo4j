apiVersion: apps/v1
kind: Deployment
metadata:
  name: albums-backend
  labels:
    app: albums-backend
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: albums-backend
  template:
    metadata:
      name: albums-backend
      labels:
        app: albums-backend
    spec:
      containers:
        - name: albums-backend
          image: "albums-backend:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: backend-configmap
          resources:
            requests:
              cpu: {{ .Values.backend.resources.cpu }}
              memory: {{ .Values.backend.resources.memory }}
          readinessProbe:
            httpGet:
              path: /api/actuator/health
              port: 8080
            initialDelaySeconds: {{ .Values.backend.probes.bootUpGracePeriod }}
            periodSeconds: 20
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /api/actuator/health
              port: 8080
            initialDelaySeconds: {{ .Values.backend.probes.bootUpGracePeriod }}
            periodSeconds: 60
            timeoutSeconds: 45
          volumeMounts:
            - mountPath: "/data/thumbnails"
              name: thumbnail-data
            - mountPath: "/data/pictures"
              name: picture-data
      volumes:
        - name: thumbnail-data
          hostPath:
            path: {{ .Values.hostVolumePaths.thumbnails }}
            type: DirectoryOrCreate
        - name: picture-data
          hostPath:
            path: {{ .Values.hostVolumePaths.pictures }}
            type: DirectoryOrCreate